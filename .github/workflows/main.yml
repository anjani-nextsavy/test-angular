# name: CI/CD for Angular App

# on:
#   push:
#     branches:
#       - staging

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [20.x]

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Install dependencies
#         run: npm install

#       - name: Install Angular CLI
#         run: npm install -g @angular/cli

#       - name: Build the project
#         run: npm run build --if-present

#       - name: Modify index.html
#         run: |
#           sed -i 's|<base href="/">|<base href="/angular-staging/">|g' dist/test-angular/index.html

#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: build-artifacts
#           path: dist/test-angular/

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Download build artifacts
#         uses: actions/download-artifact@v3
#         with:
#           name: build-artifacts
#           path: /home/runner/work/test-angular/dist/test-angular/

#       - name: Add SSH key to known_hosts
#         run: |
#           mkdir -p ~/.ssh
#           ssh-keyscan -H ${{ secrets.STAGING_SERVER }} >> ~/.ssh/known_hosts

#       - name: Deploy to Staging
#         env:
#           STAGING_SERVER: ${{ secrets.STAGING_SERVER }}
#           STAGING_USER: ${{ secrets.STAGING_USER }}
#           STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
#         run: |
#           sshpass -p $STAGING_PASSWORD scp -r /home/runner/work/test-angular/dist/test-angular/* $STAGING_USER@$STAGING_SERVER:public_html/angular-staging

name: CI/CD for Angular App

on:
  push:
    branches:
      - staging
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Build the project
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/staging' ]]; then
            npm run build -- --configuration development
          else
            npm run build -- --configuration production
          fi

      - name: Modify index.html for staging
        if: github.ref == 'refs/heads/staging'
        run: |
          sed -i 's|<base href="/">|<base href="/angular-staging/">|g' dist/test-angular/index.html

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/test-angular/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: /home/runner/work/test-angular/dist/test-angular/

      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.STAGING_SERVER }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.PRODUCTION_SERVER }} >> ~/.ssh/known_hosts

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        env:
          STAGING_SERVER: ${{ secrets.STAGING_SERVER }}
          STAGING_USER: ${{ secrets.STAGING_USER }}
          STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
        run: |
          sshpass -p $STAGING_PASSWORD scp -r /home/runner/work/test-angular/dist/test-angular/* $STAGING_USER@$STAGING_SERVER:public_html/angular-staging

      - name: Deploy to Production
        if: github.ref == 'refs/heads/master'
        env:
          PRODUCTION_SERVER: ${{ secrets.PRODUCTION_SERVER }}
          PRODUCTION_USER: ${{ secrets.PRODUCTION_USER }}
          PRODUCTION_PASSWORD: ${{ secrets.PRODUCTION_PASSWORD }}
        run: |
          sshpass -p $PRODUCTION_PASSWORD scp -r /home/runner/work/test-angular/dist/test-angular/* $PRODUCTION_USER@$PRODUCTION_SERVER:public_html/angular-prod

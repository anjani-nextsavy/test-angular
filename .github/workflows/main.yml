name: CI/CD for Angular App

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Build the project
        run: npm run build --if-present

      - name: Modify index.html
        run: |
          sed -i 's|<base href="/">|<base href="/angular-staging/">|g' dist/test-angular/index.html

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/test-angular/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: /home/runner/work/test-angular/dist/test-angular/

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "$STAGING_SERVER_SSH_KEY" >> ~/.ssh/known_hosts
        env:
          STAGING_SERVER_SSH_KEY: ${{ secrets.STAGING_SERVER_SSH_KEY }}
      

      - name: Deploy to Staging
        env:
          STAGING_SERVER: ${{ secrets.STAGING_SERVER }}
          STAGING_USER: ${{ secrets.STAGING_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" /home/runner/work/test-angular/dist/test-angular/* $STAGING_USER@$STAGING_SERVER:public_html/angular-staging
        
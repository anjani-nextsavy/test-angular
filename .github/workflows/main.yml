# name: CI

# on:
#   push:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [20.x]
#         # node-version: [18.x, 20.x]

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Install dependencies
#         run: npm install

#       - name: Install Angular CLI
#         run: npm install -g @angular/cli

#       - name: Build the project
#         run: npm run build

#       - name: Run tests
#         run: ng test --watch=false --browsers=ChromeHeadless
#         # run: ng test --watch=false --browsers=ChromeHeadless,FirefoxHeadless

#   deploy:
#     needs: build # Ensures that the 'build' job completes successfully before this job starts
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Install dependencies
#         run: npm install

#       - name: Add SSH key to known_hosts
#         run: |
#           mkdir -p ~/.ssh
#           ssh-keyscan -H ${{ secrets.STAGING_SERVER }} >> ~/.ssh/known_hosts
  
#       - name: Deploy to Staging
#         env:
#           STAGING_SERVER: ${{ secrets.STAGING_SERVER }}
#           STAGING_USER: ${{ secrets.STAGING_USER }}
#           STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
#         run: |
#           sshpass -p $STAGING_PASSWORD scp -r dist/test-angular/* $STAGING_USER@$STAGING_SERVER:public_html/angular

name: CI/CD for Angular App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Build the project
        run: npm run build

      - name: List build directory
        run: ls -la dist/test-angular/

      - name: List build directory contents before deployment
        run: find dist/test-angular/browser/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Add SSH key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.STAGING_SERVER }} >> ~/.ssh/known_hosts

      - name: Deploy to Staging
        env:
          STAGING_SERVER: ${{ secrets.STAGING_SERVER }}
          STAGING_USER: ${{ secrets.STAGING_USER }}
          STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
        run: |
          sshpass -p $STAGING_PASSWORD scp -r dist/test-angular/browser/* $STAGING_USER@$STAGING_SERVER:public_html/angular
